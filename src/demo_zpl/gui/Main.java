/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package demo_zpl.gui;

import demo_zpl.service.PrintLabel;
import demo_zpl.service.ZPLImageConverter;
import java.awt.Color;
import java.awt.Font;
import java.io.File;
import java.io.IOException;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.filechooser.FileFilter;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.text.AttributeSet;
import javax.swing.text.BadLocationException;
import javax.swing.text.PlainDocument;

/**
 * @author davidgomez
 */
public class Main extends javax.swing.JFrame {

    private String filePath;
    private PrintLabel printLabel;

    /**
     * Creates new form Main
     */
    public Main() {
        initComponents();
        setup();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        rbGroup = new javax.swing.ButtonGroup();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        marginLeftSpinner = new javax.swing.JSpinner();
        jLabel2 = new javax.swing.JLabel();
        btnGenerateCode = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        marginTopSpiner = new javax.swing.JSpinner();
        spaceLineSpinner = new javax.swing.JSpinner();
        jLabel4 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        fontSizeSpinner = new javax.swing.JSpinner();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtZplCodeGen = new javax.swing.JTextArea();
        jPanel2 = new javax.swing.JPanel();
        btnClear = new javax.swing.JButton();
        btnProcessImage = new javax.swing.JButton();
        btnSelectFile = new javax.swing.JButton();
        txtFilePath = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtZplImageCode = new javax.swing.JTextArea();
        jPanel3 = new javax.swing.JPanel();
        txtIpAddress = new javax.swing.JTextField();
        btnSendPrinter = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtPortNro = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtNameUsb = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        txtZplCode = new javax.swing.JTextArea();
        rbOptWifi = new javax.swing.JRadioButton();
        rbOptUsb = new javax.swing.JRadioButton();
        lblStatus = new javax.swing.JLabel();
        chkKeepData = new javax.swing.JCheckBox();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Zpl POC");
        setResizable(false);

        marginLeftSpinner.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 1));
        marginLeftSpinner.setEnabled(false);

        jLabel2.setText("Margin LEFT");

        btnGenerateCode.setText("Accion Generate");
        btnGenerateCode.setEnabled(false);
        btnGenerateCode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGenerateCodeActionPerformed(evt);
            }
        });

        jLabel1.setText("Margin TOP");

        marginTopSpiner.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 1));
        marginTopSpiner.setEnabled(false);

        spaceLineSpinner.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 1));
        spaceLineSpinner.setEnabled(false);

        jLabel4.setText("Space Line");

        jLabel3.setText("Font Size ");

        fontSizeSpinner.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 1));
        fontSizeSpinner.setEnabled(false);

        txtZplCodeGen.setEditable(false);
        txtZplCodeGen.setColumns(20);
        txtZplCodeGen.setLineWrap(true);
        txtZplCodeGen.setRows(100);
        txtZplCodeGen.setEnabled(false);
        jScrollPane1.setViewportView(txtZplCodeGen);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 925, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(marginTopSpiner, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(marginLeftSpinner, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(66, 66, 66)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4))
                        .addGap(66, 66, 66)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(fontSizeSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(spaceLineSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnGenerateCode, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(marginTopSpiner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3)
                            .addComponent(fontSizeSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(marginLeftSpinner)
                            .addComponent(jLabel2)
                            .addComponent(jLabel4)
                            .addComponent(spaceLineSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(btnGenerateCode, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 475, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Generate code", jPanel1);

        btnClear.setText("Clear");
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });

        btnProcessImage.setText("Generate zpl logo");
        btnProcessImage.setEnabled(false);
        btnProcessImage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnProcessImageActionPerformed(evt);
            }
        });

        btnSelectFile.setText("Select File");
        btnSelectFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSelectFileActionPerformed(evt);
            }
        });

        txtFilePath.setEditable(false);
        txtFilePath.setText("Select a image file ...");

        txtZplImageCode.setEditable(false);
        txtZplImageCode.setColumns(20);
        txtZplImageCode.setLineWrap(true);
        txtZplImageCode.setRows(100);
        jScrollPane2.setViewportView(txtZplImageCode);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 925, Short.MAX_VALUE)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(btnClear)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addContainerGap())
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(txtFilePath, javax.swing.GroupLayout.PREFERRED_SIZE, 433, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(51, 51, 51)
                        .addComponent(btnSelectFile, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnProcessImage, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(47, 47, 47))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnProcessImage, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtFilePath, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSelectFile))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnClear)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 472, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Generate Image", jPanel2);

        txtIpAddress.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtIpAddressKeyTyped(evt);
            }
        });

        btnSendPrinter.setText("Send printer");
        btnSendPrinter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSendPrinterActionPerformed(evt);
            }
        });

        jLabel5.setText("IP:");

        jLabel6.setText("Port:");

        txtPortNro.setText("9100");
        txtPortNro.setMaximumSize(new java.awt.Dimension(4, 4));
        txtPortNro.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtPortNroKeyTyped(evt);
            }
        });

        jLabel7.setText("USB name:");

        txtZplCode.setColumns(20);
        txtZplCode.setLineWrap(true);
        txtZplCode.setRows(100);
        jScrollPane3.setViewportView(txtZplCode);

        rbOptWifi.setText("Wifi connection");
        rbOptWifi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbOptWifiActionPerformed(evt);
            }
        });

        rbOptUsb.setText("USB connection");
        rbOptUsb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbOptUsbActionPerformed(evt);
            }
        });

        lblStatus.setFont(new java.awt.Font("Ubuntu", 1, 12)); // NOI18N
        lblStatus.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblStatus.setText("status");
        lblStatus.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        chkKeepData.setText("Keep data");

        jButton1.setText("Clear");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jScrollPane3)
                        .addContainerGap())
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addComponent(jLabel7)
                                        .addGap(12, 12, 12))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                        .addComponent(jLabel5)
                                        .addGap(18, 18, 18)))
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addComponent(txtIpAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel6))
                                    .addComponent(txtNameUsb, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addComponent(txtPortNro, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(29, 29, 29)
                                        .addComponent(chkKeepData)
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                        .addGap(0, 0, Short.MAX_VALUE)
                                        .addComponent(lblStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(rbOptWifi)
                                .addGap(18, 18, 18)
                                .addComponent(rbOptUsb)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 66, Short.MAX_VALUE)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                .addComponent(jButton1)
                                .addGap(23, 23, 23))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                .addComponent(btnSendPrinter, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(114, 114, 114))))))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(rbOptWifi)
                            .addComponent(rbOptUsb))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txtIpAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel6)
                                .addComponent(txtPortNro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(chkKeepData))
                            .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txtNameUsb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel7))))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(btnSendPrinter, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(21, 21, 21)
                        .addComponent(jButton1)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 453, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Send to Print", jPanel3);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSelectFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSelectFileActionPerformed
        FileFilter filter = new FileNameExtensionFilter("Image File", "jpg", "jpeg", "png");
        JFileChooser jfc = new JFileChooser();
        jfc.setAcceptAllFileFilterUsed(false);
        jfc.setFileFilter(filter);
        jfc.showOpenDialog(null);
        File fileChoose = jfc.getSelectedFile();
        if (fileChoose != null) {
            txtFilePath.setText(fileChoose.getAbsolutePath());
            btnProcessImage.setEnabled(true);
            this.filePath = fileChoose.getAbsolutePath();
        }
    }//GEN-LAST:event_btnSelectFileActionPerformed

    private void btnProcessImageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnProcessImageActionPerformed
        txtZplCodeGen.setText("");
        try {
            txtZplCodeGen.setText(ZPLImageConverter.main(this.filePath));
        } catch (IOException ex) {
            System.out.println("Error in process image: " + ex);
        }
    }//GEN-LAST:event_btnProcessImageActionPerformed

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        // TODO add your handling code here:
        this.txtZplCodeGen.setText("");
        this.txtFilePath.setText("");
    }//GEN-LAST:event_btnClearActionPerformed

    private void btnGenerateCodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGenerateCodeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnGenerateCodeActionPerformed

    private void txtIpAddressKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtIpAddressKeyTyped
        final char typedChar = evt.getKeyChar();
        if (!Character.isDigit(typedChar) && typedChar != '.') {
            evt.consume();
        }
    }//GEN-LAST:event_txtIpAddressKeyTyped

    private void txtPortNroKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPortNroKeyTyped
        final char typedChar = evt.getKeyChar();
        if (!Character.isDigit(typedChar)) {
            evt.consume();
        }
    }//GEN-LAST:event_txtPortNroKeyTyped

    private void rbOptUsbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbOptUsbActionPerformed
        this.selectOpcUSB();
        this.resetLabelStatus();
    }//GEN-LAST:event_rbOptUsbActionPerformed

    private void rbOptWifiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbOptWifiActionPerformed
        this.selectOpcWifi();
        this.resetLabelStatus();
    }//GEN-LAST:event_rbOptWifiActionPerformed

    private void btnSendPrinterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSendPrinterActionPerformed

        boolean flagPrinter = false;
        // 1 - check connection
        this.changeStateLabel(this.lblStatus, Color.YELLOW, "Checking conecction ...", false);

        if (this.rbOptWifi.isSelected()) {
            flagPrinter = printLabel.sendLabelToPrintIP(
                    this.txtIpAddress.getText(),
                    Integer.parseInt(this.txtPortNro.getText()),
                    this.txtZplCode.getText());
        } else {
            flagPrinter = printLabel.sendLabelToPrintUSB(
                    this.txtNameUsb.getText(),
                    this.txtZplCode.getText());
        }

        if (flagPrinter) {
            this.changeStateLabel(this.lblStatus, Color.GREEN, "Done...", false);
        } else {
            this.changeStateLabel(this.lblStatus, Color.RED, "Conecction Failed...", false);
        }
    }//GEN-LAST:event_btnSendPrinterActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        this.cleanTextArea();
    }//GEN-LAST:event_jButton1ActionPerformed

    // ############ Private methods ###############
    //Class implemented to define the lenght of some textbox field
    class JTextFieldLimit extends PlainDocument {

        private int limit;

        JTextFieldLimit(int limit) {
            super();
            this.limit = limit;
        }

        JTextFieldLimit(int limit, boolean upper) {
            super();
            this.limit = limit;
        }

        public void insertString(int offset, String str, AttributeSet attr)
                throws BadLocationException {
            if (str == null) {
                return;
            }

            if ((getLength() + str.length()) <= limit) {
                super.insertString(offset, str, attr);
            }
        }
    }

    private void setup() {
        this.fontSizeSpinner.setValue(6);
        this.marginLeftSpinner.setValue(15);
        this.marginTopSpiner.setValue(50);
        this.spaceLineSpinner.setValue(24);
        this.txtPortNro.setDocument(new JTextFieldLimit(4));

        //Config Radio buttons
        this.rbGroup.add(rbOptUsb);
        this.rbGroup.add(rbOptWifi);
        this.rbOptWifi.doClick();

        //reset
        resetLabelStatus();
        cleanUSBFields();
        cleanWIFIFields();
        cleanTextArea();

        //Classes
        printLabel = new PrintLabel();
        
        //Libraries
        loadLibraries();
    }

    private void cleanUSBFields() {
        this.txtNameUsb.setText("ZDesigner ZQ520 (CPCL)");
    }

    private void cleanWIFIFields() {
        this.txtIpAddress.setText("");
        this.txtPortNro.setText("9100");
    }

    private void selectOpcWifi() {
        if (!this.chkKeepData.isSelected()) {
            this.cleanUSBFields();
        }
        this.txtNameUsb.setEnabled(false);
        this.txtIpAddress.setEnabled(true);
        this.txtPortNro.setEnabled(true);
    }

    private void selectOpcUSB() {
        if (!this.chkKeepData.isSelected()) {
            this.cleanWIFIFields();
        }
        this.txtNameUsb.setEnabled(true);
        this.txtIpAddress.setEnabled(false);
        this.txtPortNro.setEnabled(false);
    }

    private void resetLabelStatus() {
        this.changeStateLabel(this.lblStatus, new Color(242, 241, 240), "status", true);
    }

    private void changeStateLabel(final JLabel label, final Color color, final String text, final boolean isReset) {
        label.setText(text);
        label.setBackground(color);
        label.setOpaque(!isReset);
        final Font font = new Font("Courier", Font.BOLD, 15);
        label.setFont(font);
    }

    private void cleanTextArea() {
        this.txtZplCode.setText("^XA^FO17,16^GB379,371,8^FS^FT65,255^A0N,135,134^FDTEST^FS^XZ");
    }
    
    private void loadLibraries() {

    }

    // ############ End private methods ###############
    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Main().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnGenerateCode;
    private javax.swing.JButton btnProcessImage;
    private javax.swing.JButton btnSelectFile;
    private javax.swing.JButton btnSendPrinter;
    private javax.swing.JCheckBox chkKeepData;
    private javax.swing.JSpinner fontSizeSpinner;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JLabel lblStatus;
    private javax.swing.JSpinner marginLeftSpinner;
    private javax.swing.JSpinner marginTopSpiner;
    private javax.swing.ButtonGroup rbGroup;
    private javax.swing.JRadioButton rbOptUsb;
    private javax.swing.JRadioButton rbOptWifi;
    private javax.swing.JSpinner spaceLineSpinner;
    private javax.swing.JTextField txtFilePath;
    private javax.swing.JTextField txtIpAddress;
    private javax.swing.JTextField txtNameUsb;
    private javax.swing.JTextField txtPortNro;
    private javax.swing.JTextArea txtZplCode;
    private javax.swing.JTextArea txtZplCodeGen;
    private javax.swing.JTextArea txtZplImageCode;
    // End of variables declaration//GEN-END:variables
}
