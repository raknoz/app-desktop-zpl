/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package demo_zpl.gui;

import com.zebra.sdk.util.internal.IPAddressUtil;
import demo_zpl.dto.DataToPrintDTO;
import demo_zpl.enums.OptionConnect;
import demo_zpl.service.workers.ProcessImageWorker;
import demo_zpl.service.workers.SearchPrinterWorker;
import demo_zpl.service.workers.SendToPrintWorker;
import demo_zpl.utils.GuiUtils;
import demo_zpl.utils.ZplCustomUtils;
import java.awt.event.ItemEvent;
import java.awt.event.KeyEvent;
import java.io.File;
import java.net.Inet4Address;
import java.util.HashMap;
import java.util.Map;
import javax.swing.InputMap;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.KeyStroke;
import javax.swing.UIManager;
import javax.swing.filechooser.FileFilter;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.text.AttributeSet;
import javax.swing.text.BadLocationException;
import javax.swing.text.DefaultEditorKit;
import javax.swing.text.PlainDocument;

/**
 * @author davidgomez
 */
public class Main extends javax.swing.JFrame {

    private String filePath;
    private Map<String, String> mapDiscoveredPrinters;
    private final static String NUMBER_PORT_DEFAULT = "6101";
    private final static String REGULAR_EXPRESION_IP_DEFAULT = "192.168.0.1-*";
    private OptionConnect connectionSelected;

    /**
     * Creates new form Main
     */
    public Main() {
        initComponents();
        setup();
        GuiUtils.centreWindow(this);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        rbGroup = new javax.swing.ButtonGroup();
        rbgFindPrinters = new javax.swing.ButtonGroup();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        marginLeftSpinner = new javax.swing.JSpinner();
        jLabel2 = new javax.swing.JLabel();
        btnGenerateCode = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        marginTopSpiner = new javax.swing.JSpinner();
        spaceLineSpinner = new javax.swing.JSpinner();
        jLabel4 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        fontSizeSpinner = new javax.swing.JSpinner();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtZplCodeGen = new javax.swing.JTextArea();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtZplImageCode = new javax.swing.JTextArea();
        jPanel7 = new javax.swing.JPanel();
        btnSelectFile = new javax.swing.JButton();
        txtFilePath = new javax.swing.JTextField();
        btnClearImageContent = new javax.swing.JButton();
        btnProcessImage = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        txtInputZplCode = new javax.swing.JTextArea();
        panelConnction = new javax.swing.JPanel();
        rbSendPrinterWifi = new javax.swing.JRadioButton();
        rbSendPrinterUsb = new javax.swing.JRadioButton();
        jLabel5 = new javax.swing.JLabel();
        txtIpAddress = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtPortNro = new javax.swing.JTextField();
        btnSendPrinter = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        cbPrinters = new javax.swing.JComboBox<>();
        lblStatus = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        btnResetInput = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        cbDiscoveredPrinters = new javax.swing.JComboBox<>();
        jPanel5 = new javax.swing.JPanel();
        btnSearchPrinters = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        txtPrinterProperties = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Zpl POC");
        setResizable(false);

        marginLeftSpinner.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 1));
        marginLeftSpinner.setEnabled(false);

        jLabel2.setText("Margin LEFT");

        btnGenerateCode.setText("Accion Generate");
        btnGenerateCode.setEnabled(false);
        btnGenerateCode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGenerateCodeActionPerformed(evt);
            }
        });

        jLabel1.setText("Margin TOP");

        marginTopSpiner.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 1));
        marginTopSpiner.setEnabled(false);

        spaceLineSpinner.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 1));
        spaceLineSpinner.setEnabled(false);

        jLabel4.setText("Space Line");

        jLabel3.setText("Font Size ");

        fontSizeSpinner.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 1));
        fontSizeSpinner.setEnabled(false);

        txtZplCodeGen.setEditable(false);
        txtZplCodeGen.setColumns(20);
        txtZplCodeGen.setLineWrap(true);
        txtZplCodeGen.setRows(100);
        txtZplCodeGen.setEnabled(false);
        jScrollPane1.setViewportView(txtZplCodeGen);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1196, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(marginTopSpiner, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(marginLeftSpinner, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(66, 66, 66)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4))
                        .addGap(66, 66, 66)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(fontSizeSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(spaceLineSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnGenerateCode, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(marginTopSpiner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3)
                            .addComponent(fontSizeSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(marginLeftSpinner)
                            .addComponent(jLabel2)
                            .addComponent(jLabel4)
                            .addComponent(spaceLineSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(btnGenerateCode, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 475, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Generate code", jPanel1);

        txtZplImageCode.setEditable(false);
        txtZplImageCode.setColumns(20);
        txtZplImageCode.setLineWrap(true);
        txtZplImageCode.setRows(100);
        jScrollPane2.setViewportView(txtZplImageCode);

        jPanel7.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        btnSelectFile.setText("Select File");
        btnSelectFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSelectFileActionPerformed(evt);
            }
        });

        txtFilePath.setEditable(false);
        txtFilePath.setText("Select a image file ...");

        btnClearImageContent.setText("Clear");
        btnClearImageContent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearImageContentActionPerformed(evt);
            }
        });

        btnProcessImage.setText("Generate zpl logo");
        btnProcessImage.setEnabled(false);
        btnProcessImage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnProcessImageActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(txtFilePath, javax.swing.GroupLayout.PREFERRED_SIZE, 433, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnSelectFile, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                        .addComponent(btnClearImageContent)
                        .addGap(548, 548, 548)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnProcessImage, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(316, 316, 316))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtFilePath, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnSelectFile))
                        .addGap(50, 50, 50)
                        .addComponent(btnClearImageContent))
                    .addComponent(btnProcessImage, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(20, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 1196, Short.MAX_VALUE)
                    .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 590, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Generate Image", jPanel2);

        txtInputZplCode.setColumns(20);
        txtInputZplCode.setLineWrap(true);
        txtInputZplCode.setRows(100);
        jScrollPane3.setViewportView(txtInputZplCode);

        panelConnction.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        rbSendPrinterWifi.setText("Wifi connection");
        rbSendPrinterWifi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbSendPrinterWifiActionPerformed(evt);
            }
        });

        rbSendPrinterUsb.setText("USB connection");
        rbSendPrinterUsb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbSendPrinterUsbActionPerformed(evt);
            }
        });

        jLabel5.setText("IP:");

        txtIpAddress.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtIpAddressKeyTyped(evt);
            }
        });

        jLabel6.setText("Port:");

        txtPortNro.setText("6101");
        txtPortNro.setMaximumSize(new java.awt.Dimension(4, 4));
        txtPortNro.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtPortNroKeyTyped(evt);
            }
        });

        btnSendPrinter.setText("Send printer");
        btnSendPrinter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSendPrinterActionPerformed(evt);
            }
        });

        jLabel7.setText("USB Printers:");

        lblStatus.setFont(new java.awt.Font("Ubuntu", 1, 12)); // NOI18N
        lblStatus.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblStatus.setText("status");
        lblStatus.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jButton1.setText("Clear");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        btnResetInput.setText("Reset");
        btnResetInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetInputActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelConnctionLayout = new javax.swing.GroupLayout(panelConnction);
        panelConnction.setLayout(panelConnctionLayout);
        panelConnctionLayout.setHorizontalGroup(
            panelConnctionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelConnctionLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelConnctionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(panelConnctionLayout.createSequentialGroup()
                        .addGroup(panelConnctionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelConnctionLayout.createSequentialGroup()
                                .addComponent(rbSendPrinterWifi)
                                .addGap(18, 18, 18)
                                .addComponent(rbSendPrinterUsb)
                                .addGap(97, 97, 97)
                                .addComponent(jLabel6)
                                .addGap(18, 18, 18)
                                .addComponent(txtPortNro, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(panelConnctionLayout.createSequentialGroup()
                                .addGroup(panelConnctionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel7))
                                .addGap(18, 18, 18)
                                .addGroup(panelConnctionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cbPrinters, javax.swing.GroupLayout.PREFERRED_SIZE, 272, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtIpAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 272, Short.MAX_VALUE)
                        .addComponent(btnSendPrinter, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panelConnctionLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(lblStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(145, 145, 145)
                        .addComponent(jButton1)
                        .addGap(65, 65, 65)
                        .addComponent(btnResetInput, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(194, 194, 194))
        );
        panelConnctionLayout.setVerticalGroup(
            panelConnctionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelConnctionLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelConnctionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelConnctionLayout.createSequentialGroup()
                        .addComponent(btnSendPrinter, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 28, Short.MAX_VALUE)
                        .addGroup(panelConnctionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnResetInput)
                            .addComponent(jButton1)
                            .addComponent(lblStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(panelConnctionLayout.createSequentialGroup()
                        .addGroup(panelConnctionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(rbSendPrinterWifi)
                            .addComponent(rbSendPrinterUsb))
                        .addGap(18, 18, 18)
                        .addGroup(panelConnctionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(txtPortNro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5)
                            .addComponent(txtIpAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(panelConnctionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cbPrinters, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(panelConnction, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 1196, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panelConnction, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 555, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Send to Print", jPanel3);

        jLabel9.setText("Priters founded:");

        jPanel5.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        btnSearchPrinters.setText("Search Local Printers");
        btnSearchPrinters.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchPrintersActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(435, 435, 435)
                .addComponent(btnSearchPrinters, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnSearchPrinters, javax.swing.GroupLayout.DEFAULT_SIZE, 85, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder("Properties"));

        txtPrinterProperties.setEditable(false);
        txtPrinterProperties.setColumns(20);
        txtPrinterProperties.setRows(5);
        jScrollPane5.setViewportView(txtPrinterProperties);

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 520, Short.MAX_VALUE)
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane5)
        );

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9)
                    .addComponent(cbDiscoveredPrinters, javax.swing.GroupLayout.PREFERRED_SIZE, 301, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(75, 75, 75)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(267, Short.MAX_VALUE))
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(65, 65, 65)
                        .addComponent(jLabel9)
                        .addGap(18, 18, 18)
                        .addComponent(cbDiscoveredPrinters, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(524, Short.MAX_VALUE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())))
        );

        jTabbedPane1.addTab("Find Printers", jPanel4);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSelectFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSelectFileActionPerformed
        FileFilter filter = new FileNameExtensionFilter("Image File", "jpg", "jpeg", "png");
        JFileChooser jfc = new JFileChooser();
        jfc.setAcceptAllFileFilterUsed(false);
        jfc.setFileFilter(filter);
        jfc.showOpenDialog(null);
        File fileChoose = jfc.getSelectedFile();
        if (fileChoose != null) {
            txtFilePath.setText(fileChoose.getAbsolutePath().trim());
            btnProcessImage.setEnabled(true);
            this.filePath = fileChoose.getAbsolutePath().trim();
        }
    }//GEN-LAST:event_btnSelectFileActionPerformed

    private void btnProcessImageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnProcessImageActionPerformed
        this.txtZplImageCode.setText("");
        final ProcessImageWorker piw
                = new ProcessImageWorker(this.btnProcessImage, this.txtZplImageCode, this.filePath);
        piw.execute();
    }//GEN-LAST:event_btnProcessImageActionPerformed

    private void btnClearImageContentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearImageContentActionPerformed
        // TODO add your handling code here:
        this.txtZplImageCode.setText("");
        this.txtFilePath.setText("");
    }//GEN-LAST:event_btnClearImageContentActionPerformed

    private void btnGenerateCodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGenerateCodeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnGenerateCodeActionPerformed

    private void txtIpAddressKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtIpAddressKeyTyped
        final char typedChar = evt.getKeyChar();
        if (!Character.isDigit(typedChar) && typedChar != '.') {
            evt.consume();
        }
    }//GEN-LAST:event_txtIpAddressKeyTyped

    private void txtPortNroKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPortNroKeyTyped
        final char typedChar = evt.getKeyChar();
        if (!Character.isDigit(typedChar)) {
            evt.consume();
        }
    }//GEN-LAST:event_txtPortNroKeyTyped

    private void rbSendPrinterUsbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbSendPrinterUsbActionPerformed
        this.selectOpcUSB();
        GuiUtils.resetLabelStatus(lblStatus);
    }//GEN-LAST:event_rbSendPrinterUsbActionPerformed

    private void rbSendPrinterWifiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbSendPrinterWifiActionPerformed
        this.selectOpcWifi();
        GuiUtils.resetLabelStatus(lblStatus);
    }//GEN-LAST:event_rbSendPrinterWifiActionPerformed

    private void btnSendPrinterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSendPrinterActionPerformed
        
        if(rbSendPrinterWifi.isSelected() && !IPAddressUtil.ipAddressIsValid(txtIpAddress.getText())) {
            infoBox("Please, Verify the IP direccion and port number for the printer", "Warning");
            return;
        } 
          
        if(rbSendPrinterUsb.isSelected() && cbPrinters.getSelectedIndex() < 1) {
            infoBox("Please, select a USB printer", "Warning");
            return;
        } 
        
        //Falta validacion IP y PORT y Combo de nombre de la printer
        final DataToPrintDTO dataToPrintDTO
                = new DataToPrintDTO(this.txtIpAddress.getText().trim(),
                        Integer.parseInt(this.txtPortNro.getText().trim()),
                        String.valueOf(this.cbPrinters.getSelectedItem()),
                        this.connectionSelected,
                        this.txtInputZplCode.getText());

        final SendToPrintWorker worker = new SendToPrintWorker(this.panelConnction,
                this.lblStatus, this.btnSendPrinter, dataToPrintDTO);
        worker.execute();
    }//GEN-LAST:event_btnSendPrinterActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        this.txtInputZplCode.setText("");
        this.txtIpAddress.setText("");
        this.txtPortNro.setText("");
    }//GEN-LAST:event_jButton1ActionPerformed

    private void btnSearchPrintersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchPrintersActionPerformed
        this.mapDiscoveredPrinters = new HashMap<>();
        final SearchPrinterWorker spw
                = new SearchPrinterWorker(this.btnSearchPrinters,
                        this.cbDiscoveredPrinters,
                        this.mapDiscoveredPrinters);
        spw.execute();
    }//GEN-LAST:event_btnSearchPrintersActionPerformed

    private void btnResetInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetInputActionPerformed
        resetInputZplCode();
        this.txtIpAddress.setText("");
        this.txtPortNro.setText("6101");
    }//GEN-LAST:event_btnResetInputActionPerformed

    /*######################################################################## 
    ########################################################################## 
    ############################ Private methods #############################
    ########################################################################## 
    ##########################################################################*/
    //Class implemented to define the lenght of some textbox field
    class JTextFieldLimit extends PlainDocument {

        private final int limit;

        JTextFieldLimit(final int limit) {
            super();
            this.limit = limit;
        }

        JTextFieldLimit(final int limit, final boolean upper) {
            super();
            this.limit = limit;
        }

        public void insertString(final int offset, final String str, final AttributeSet attr)
                throws BadLocationException {
            if (str == null) {
                return;
            }

            if ((getLength() + str.length()) <= limit) {
                super.insertString(offset, str, attr);
            }
        }
    }

    private void setup() {
        //Configuration for mac
        // Implemented from http://stackoverflow.com/questions/7252749/how-to-use-command-c-command-v-shortcut-in-mac-to-copy-paste-text#answer-7253059
        boolean isMacOs = (System.getProperty("os.name").toLowerCase().contains("mac"));
        if (isMacOs) {
            final InputMap im = (InputMap) UIManager.get("TextField.focusInputMap");
            im.put(KeyStroke.getKeyStroke(KeyEvent.VK_C, KeyEvent.META_DOWN_MASK), DefaultEditorKit.copyAction);
            im.put(KeyStroke.getKeyStroke(KeyEvent.VK_V, KeyEvent.META_DOWN_MASK), DefaultEditorKit.pasteAction);
            im.put(KeyStroke.getKeyStroke(KeyEvent.VK_X, KeyEvent.META_DOWN_MASK), DefaultEditorKit.cutAction);
        }

        configGenerateCodeTab();
        configGenerateImageTab();
        configSetToPrintTab();
        configFindPrintersTab();
    }

    private void configGenerateCodeTab() {
        this.fontSizeSpinner.setValue(6);
        this.marginLeftSpinner.setValue(15);
        this.marginTopSpiner.setValue(50);
        this.spaceLineSpinner.setValue(24);
    }

    private void configGenerateImageTab() {

    }

    private void configSetToPrintTab() {
        //Config Radio buttons
        this.rbGroup.add(this.rbSendPrinterUsb);
        this.rbGroup.add(this.rbSendPrinterWifi);
        this.rbSendPrinterWifi.doClick();

        //reset fields
        GuiUtils.resetLabelStatus(this.lblStatus);
        cleanUSBFields();
        cleanWIFIFields();
        resetInputZplCode();

        //Printers USB
        loadDriversPrintersUSB();
        this.cbPrinters.setSelectedIndex(
                this.cbPrinters.getItemCount() > 0 ? 0 : -1
        );

        //Set default Connection Selected
        this.connectionSelected = OptionConnect.WIRELESS_CONNECT;
        //Limit characters in some textBox
        this.txtPortNro.setDocument(new JTextFieldLimit(4));
        this.txtPortNro.setText("6101");
    }

    private void configFindPrintersTab() {
        this.cbDiscoveredPrinters.addItemListener((ItemEvent event) -> {
            final String item = (String) event.getItem();
            displayDataPrinter(item);
        });
        this.cbDiscoveredPrinters.setEditable(false);
        this.cbDiscoveredPrinters.setEnabled(false);

    }

    private void cleanUSBFields() {
        this.cbPrinters.setSelectedIndex(-1);
    }

    private void cleanWIFIFields() {
        this.txtIpAddress.setText("");
        this.txtPortNro.setText(NUMBER_PORT_DEFAULT);
    }

    private void selectOpcWifi() {
        this.connectionSelected = OptionConnect.WIRELESS_CONNECT;
        this.cbPrinters.setEnabled(false);
        this.txtIpAddress.setEnabled(true);
        this.txtPortNro.setEnabled(true);
    }

    private void selectOpcUSB() {
        this.connectionSelected = OptionConnect.USB_CONNECT;
        this.cbPrinters.setEnabled(true);
        this.txtIpAddress.setEnabled(false);
        this.txtPortNro.setEnabled(false);
    }

    private void resetInputZplCode() {
        this.txtInputZplCode.setText(
                "^XA"
                + "\n^POI"
                + "\n^LH0,0"
                + "\n^FO17,16"
                + "\n^GB379,371,8^FS"
                + "\n^FT65,255^A0N,135,134^FDTEST^FS"
                + "\n^XZ");
    }

    private void loadDriversPrintersUSB() {
        ZplCustomUtils.getListPrinterByFilter(OptionConnect.USB_CONNECT).forEach(dp -> {
            this.cbPrinters.addItem(dp.printerName);
        });
    }

    private void infoBox(final String infoMessage, final String titleBar) {
        JOptionPane.showMessageDialog(null, infoMessage, "InfoBox: " + titleBar, JOptionPane.INFORMATION_MESSAGE);
    }

    private void displayDataPrinter(final String ipAddress) {
        this.txtPrinterProperties.setText(mapDiscoveredPrinters.get(ipAddress));
        this.txtPrinterProperties.setCaretPosition(0);
    }

// ############ End private methods ###############
    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Main.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Main.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Main.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Main().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnClearImageContent;
    private javax.swing.JButton btnGenerateCode;
    private javax.swing.JButton btnProcessImage;
    private javax.swing.JButton btnResetInput;
    private javax.swing.JButton btnSearchPrinters;
    private javax.swing.JButton btnSelectFile;
    private javax.swing.JButton btnSendPrinter;
    private javax.swing.JComboBox<String> cbDiscoveredPrinters;
    private javax.swing.JComboBox<String> cbPrinters;
    private javax.swing.JSpinner fontSizeSpinner;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JLabel lblStatus;
    private javax.swing.JSpinner marginLeftSpinner;
    private javax.swing.JSpinner marginTopSpiner;
    private javax.swing.JPanel panelConnction;
    private javax.swing.ButtonGroup rbGroup;
    private javax.swing.JRadioButton rbSendPrinterUsb;
    private javax.swing.JRadioButton rbSendPrinterWifi;
    private javax.swing.ButtonGroup rbgFindPrinters;
    private javax.swing.JSpinner spaceLineSpinner;
    private javax.swing.JTextField txtFilePath;
    private javax.swing.JTextArea txtInputZplCode;
    private javax.swing.JTextField txtIpAddress;
    private javax.swing.JTextField txtPortNro;
    private javax.swing.JTextArea txtPrinterProperties;
    private javax.swing.JTextArea txtZplCodeGen;
    private javax.swing.JTextArea txtZplImageCode;
    // End of variables declaration//GEN-END:variables
}
